- name: include OS specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: set variables
  ansible.builtin.set_fact:
    use_hosts_file: (crdb_use_hosts_file | default(crdb_default_use_hosts_file)) | bool
    use_ssl: (crdb_use_ssl | default(crdb_default_use_ssl)) | bool
    data_filesystem: "{{ crdb_data_filesystem | default(crdb_default_data_filesystem) }}"

- name: print filesystem
  ansible.builtin.debug:
    msg: "filesystem: '{{ data_filesystem}}'"

- name: generate hosts file
  ansible.builtin.include_tasks: ansible_task_create_hosts_file.yml
  when: use_hosts_file

- name: configure os parameters
  ansible.builtin.include_tasks: ansible_task_configure_os.yml

- name: configure firewall
  ansible.builtin.include_tasks: ansible_task_configure_firewall.yml

- name: install cockroach executable
  ansible.builtin.include_tasks: ansible_task_install_cockroach_executable.yml

- name: partition and mount disks
  ansible.builtin.include_tasks: ansible_role_mount_disks.yml

- name: generate SSL certificates
  ansible.builtin.include_tasks: ansible_task_generate_ssl_certificates.yml
  when: use_ssl

- name: create systemd service
  ansible.builtin.include_tasks: ansible_task_create_service.yml

- name: start service on first node and initialize the cluster
  ansible.builtin.include_tasks: ansible_task_start_cluster_first_node.yml
  when: inventory_hostname == play_hosts[0]

- name: start service on remaining nodes
  ansible.builtin.include_tasks: ansible_task_start_cluster_other_nodes.yml
  when: inventory_hostname in play_hosts[1:]
